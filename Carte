#Télécharger les données sur https://github.com/bnosac/BelgiumMaps.StatBel (je ne pense pas que le code marchera si vous ne le faites pas) + télécharger dossier waterways
#télécharger les différents packages
#si vous n'arrivez pas à exécuter le code, juste prendre fichier mapv2 que j'ai créé et l'appeler dans le script (en écrivant simplement mapv2)
install.packages(c("sp","sf","rgdal","ggplot2","st","tmap","leaflet"))


library(sp)
library(sf)
library(rgdal)
library(ggplot2)
library(st)
library(tmap)
library(leaflet)
#------------------------------------------------------------------------------
#Fabrication de la carte de Belgique

data('BE_ADMIN_BELGIUM')
belgique <- st_as_sf(BE_ADMIN_BELGIUM)
data("BE_ADMIN_PROVINCE")               #Ajoute province (1)
provinces <- st_as_sf(BE_ADMIN_PROVINCE) # convertion st à sf (pour utilisation de tmap)
data("BE_ADMIN_MUNTY")                   #Pour les communes (2)
communes <- st_as_sf(BE_ADMIN_MUNTY)

#------------------------------------------------------------------------------
#Cours d'eau
data("BE_OSM_WATERWAYS")
waterways <- st_as_sf(BE_OSM_WATERWAYS) #(3)

#-------------------------------------------------------------------------------
#map avec cours d'eau

mapv1 <- qtm(provinces) +qtm(communes, fill = "#FFFFFF") + qtm(waterways, lines.col = "#006699")  #addition de 1,2,3

#mapv1
                      #pour voir à quoi ressemble la carte normalement
#-------------------------------------------------------------------------------

#à définir selon le chemin d'accès qui mène au fichier
setwd("C:/Users/nabil/OneDrive/Bureau/Projet/")
cordinates <- read.csv(file = "C:/Users/nabil/OneDrive/Bureau/Projet/coordonnée.csv") #anciennes coordonnées pour afficher points sur carte;#à définir selon le chemin d'accès qui mène au fichier
#print(cordinates)

map1 <- tmap_leaflet(map1)%>% #implémentation sous forme intéractive
  addMiniMap(position = "bottomright",
             width = 150,
             height = 150,
             zoomAnimation = TRUE)%>% #mini map, nécessaire?
  addMarkers(lng = newcordinates$Longitude, lat = newcordinates$Latitude, label = newcordinates$Comments) #ajoute les différents points du fichier
map1



#possibilité d'ajouter d'autres infos dans le fichier csv
ID <- readline("Qui êtes vous ? ") 
Latitude <- as.numeric(readline("Veuillez introduire la latitude des coordonnées GPS : "))
Longitude <- as.numeric(readline("Veuillez introduire la longitude des coordonnées GPS : "))
Couleur <- readline("Couleur pour le point souhaité (en anglais) : ")  #à voir comment changer les couleurs des points


data <- data.frame(ID,Latitude,Longitude,Couleur)

write.table(data,
            "C:/Users/nabil/OneDrive/Bureau/Projet/coordonnée.csv", ##à définir selon le chemin d'accès qui mène au fichier
            append = TRUE,
            quote = FALSE,
            sep = ",",
            row.names = FALSE,
            col.names = FALSE)


newcordinates <- read.csv(file = 'C:/Users/nabil/OneDrive/Bureau/Projet/coordonnée.csv') #actualise fichier ; #à définir selon le chemin d'accès qui mène au fichier
#print(newcordinates)

#actualise la carte
map2 <- tmap_leaflet(mapv1)%>% #implémentation sous forme intéractive
  addMiniMap(position = "bottomright",
             width = 150,
             height = 150,
             zoomAnimation = TRUE)%>% #mini map, nécessaire?
  addMarkers(lng = newcordinates$Longitude, lat = newcordinates$Latitude) #ajoute les différents points du fichier
map2
